#default values for my helm chart

backend:
  app: backend
  port: 8080
  service: 
    type: ClusterIP
    port: 8080
    protocol: TCP
    targetPort: 8080

  deployment :
    replicas: 1
    revisionHistoryLimit: 15
    strategytype: RollingUpdate
    maxUnavailable: 1 #максимальное количество одновременно неработающих Pod'ов в процессе обновления
    maxSurge: 20%
    image: gitlab.praktikum-services.ru:5050/std-024-12/sausage-store2/sausage-backend:latest
    imagePullPolicy: Always # image извлекается всегда
    SPRING_DATASOURCE_USERNAME: std-024-12
    SPRING_DATASOURCE_PASSWORD: Testusr1234
    SPRING_DATASOURCE_URL: jdbc:postgresql://rc1d-6ltxi07qdaaunpa5.mdb.yandexcloud.net:6432/std-024-12?ssl=true
    SPRING_DATA_MONGODB_URI: mongodb://std-024-12:Testusr1234@rc1d-fmpc8y27lrcif391.mdb.yandexcloud.net:27018/std-024-12?tls=true
    SPRING_FLYWAY_BASELINE-ON-MIGRATE: true
    containerPort: 8080
    livenessProbe_path: /actuator/health
    livenessProbe_port: 8080
    initialDelaySeconds: 15
    periodSeconds: 30
    timeoutSeconds: 1
    failureThreshold: 6

  VPA:
    updateMode: "Auto"
    containerName: "*"
    minAllowed:
      cpu: 0m
      memory: 0Mi
    maxAllowed:
      cpu: 1
      memory: 500Mi
    controlledResources: ["cpu", "memory"]
    controlledValues: RequestsAndLimits 

backend-report:
  app: backend-report
  deployment:
    replicas: 1
    revisionHistoryLimit: 15
    strategytype: Recreate
    image: gitlab.praktikum-services.ru:5050/std-024-12/sausage-store2/backend-report:latest
    imagePullPolicy: Always # image извлекается всегда
    DB: mongodb://std-024-12:Testusr1234@rc1d-fmpc8y27lrcif391.mdb.yandexcloud.net:27018/std-024-12?tls=true&tlsCAFile=/app/CA.pem
    containerPort: 8080
  hpa:
    minReplicas: 1
    maxReplicas: 5
    averageUtilization: 75


fontend:
  deployment:
    replicas: 1
    revisionHistoryLimit: 15
    strategytype: Recreate
    affinityvalues: frontend
    image: gitlab.praktikum-services.ru:5050/std-024-12/sausage-store2/sausage-frontend:latest
    imagePullPolicy: Always
    containerPort: 80
    volumeMounts:
      name: nginx-conf
      mountPath: /etc/nginx/nginx.conf
      subPath: nginx.conf
      readOnly: true
    volumes:
      name: nginx-conf
    configMap:
      name: nginx-conf
      items:
      key: nginx.conf
      path: nginx.conf
  ingress:
    ingressClassName: "nginx"
    host: "nikolaev-andrey-24.k8s.praktikum-services.tech"
    service_name: frontend
    service_port_number: 80
  service:
    type: ClusterIP
    port: 80
    protocol: TCP
    targetPort: 80
