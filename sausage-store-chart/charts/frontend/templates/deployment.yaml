---
apiVersion: apps/v1
kind: Deployment # тип сущности
metadata: # метаданные
  name: frontend-{{ .Release.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{  .Values.frontend.replicas  }}
  revisionHistoryLimit: {{  .Values.frontend.revisionHistoryLimit  }}
  # Стратегия развёртывания. Recreate — удалит сначала все старые Pod'ы 
  # Есть и более гибкая стратегии, например, RollingUpdate, которая будет обновлять Pod'ы порциями  
  strategy:
    type: {{  .Values.frontend.strategytype  }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 80
              preference:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - {{  .Values.frontend.affinityvalues  }} # узнал верный label при помощи kubectl describe node/пробежаться по нодам | grep Label
      containers:
        - name: {{ .Chart.Name }}
          image: {{  .Values.frontend.image  }}
          imagePullPolicy: {{  .Values.frontend.imagePullPolicy  }} # image извлекается всегда
          # env:
          #   - name: VAULT_HOST
          #     value: 51.250.8.146
          #   - name: VAULT_TOKEN
          #     valueFrom:
          #       secretKeyRef:
          #         name: vault
          #         key: vault_token
          ports:
            - name: {{ .Chart.Name }}
              containerPort: {{  .Values.frontend.containerPort  }}
          volumeMounts:
            - name: {{  .Values.frontend.volumeMounts.name  }}
              mountPath: {{  .Values.frontend.volumeMounts.mountPath  }}
              subPath: {{  .Values.frontend.volumeMounts.subPath  }}
              readOnly: true
      volumes:
        - name: {{  .Values.frontend.volumes.name  }}
          configMap:
            name: {{  .Values.frontend.configMap.name  }}
            items:
              - key: {{  .Values.frontend.configMap.key  }}
                path: {{  .Values.frontend.configMap.path  }}
      imagePullSecrets:
       - name: docker-config-secret # Чтобы получить образ из частного реестра, Kubernetes необходимы учетные данные. Поле imagePullSecretsв файле конфигурации указывает, что Kubernetes должен получить учетные данные из секрета с именем docker-config-secret

